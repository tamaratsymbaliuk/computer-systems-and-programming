3.2.3 Linear Search: Write a function that performs a linear search on an array. The function
should return the index of the first occurrence of a specified value, or -1 if the value is not
found

section .text
global linear_search
linear_search:
    ; Parameters:
    ; rdi - pointer to the array
    ; rsi - number of elements in the array
    ; rdx - the value to search for

    ; Check if the array is empty (n == 0)
    test rsi, rsi                    ; Tests if n == 0
    jz .not_found                    ; If zero, jump to not_found

    ; Initialize index (in rcx) to 0
    xor rcx, rcx                     ; Index of current element

.search_loop:
    cmp [rdi + rcx * 4], rdx         ; Compare current array element with value
    je .found                        ; If equal, jump to found
    inc rcx                          ; Increment index
    cmp rcx, rsi                     ; Compare index with n
    jl .search_loop                  ; If index is less than n, continue loop

.not_found:
    mov rax, -1                      ; Return -1 (value not found)
    ret

.found:
    mov rax, rcx                     ; Return the current index
    ret


Code in C:

#include <stdio.h>

int linear_search(int *arr, int len, int value) {
    int *ptr = arr; // Pointer to the start of the array
    int index = 0;  // Index tracker

    while (ptr < arr + len) { // Iterate over the array
        if (*ptr == value) { // Compare the current element to the value
            return index; // Return the current index if the value matches
        }
        ptr++; // Move the pointer to the next element
        index++; // Increment the index
    }
    return -1; // Return -1 if the value is not found
}

int main() {
    int array[] = {5, 3, 7, 9, 2};
    int len = sizeof(array) / sizeof(array[0]);
    int value_to_find = 7;

    int result = linear_search(array, len, value_to_find);
    if (result != -1) {
        printf("Value %d found at index %d.\n", value_to_find, result);
    } else {
        printf("Value %d not found in the array.\n", value_to_find);
    }

    return 0;
}
